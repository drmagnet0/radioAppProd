{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/add-item/add-item.component.css","webpack:///./src/app/components/add-item/add-item.component.html","webpack:///./src/app/components/add-item/add-item.component.ts","webpack:///./src/app/components/add-items-type/add-items-type.component.css","webpack:///./src/app/components/add-items-type/add-items-type.component.html","webpack:///./src/app/components/add-items-type/add-items-type.component.ts","webpack:///./src/app/components/add-users-type/add-users-type.component.css","webpack:///./src/app/components/add-users-type/add-users-type.component.html","webpack:///./src/app/components/add-users-type/add-users-type.component.ts","webpack:///./src/app/components/adduser/adduser.component.css","webpack:///./src/app/components/adduser/adduser.component.html","webpack:///./src/app/components/adduser/adduser.component.ts","webpack:///./src/app/components/footer/footer.component.css","webpack:///./src/app/components/footer/footer.component.html","webpack:///./src/app/components/footer/footer.component.ts","webpack:///./src/app/components/header/header.component.css","webpack:///./src/app/components/header/header.component.html","webpack:///./src/app/components/header/header.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/invoices/invoices.component.css","webpack:///./src/app/components/invoices/invoices.component.html","webpack:///./src/app/components/invoices/invoices.component.ts","webpack:///./src/app/components/items/items.component.css","webpack:///./src/app/components/items/items.component.html","webpack:///./src/app/components/items/items.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/notifications/notifications.component.css","webpack:///./src/app/components/notifications/notifications.component.html","webpack:///./src/app/components/notifications/notifications.component.ts","webpack:///./src/app/components/types/types.component.html","webpack:///./src/app/components/types/types.component.ts","webpack:///./src/app/components/update-invoice/update-invoice.component.css","webpack:///./src/app/components/update-invoice/update-invoice.component.html","webpack:///./src/app/components/update-invoice/update-invoice.component.ts","webpack:///./src/app/components/users-types/users-types.component.css","webpack:///./src/app/components/users-types/users-types.component.html","webpack:///./src/app/components/users-types/users-types.component.ts","webpack:///./src/app/components/users/users.component.css","webpack:///./src/app/components/users/users.component.html","webpack:///./src/app/components/users/users.component.ts","webpack:///./src/app/services/auth.services.ts","webpack:///./src/app/services/home.services.ts","webpack:///./src/app/services/invoices.services.ts","webpack:///./src/app/services/items.services.ts","webpack:///./src/app/services/itemsTypes.services.ts","webpack:///./src/app/services/main.services.ts","webpack:///./src/app/services/notifications.services.ts","webpack:///./src/app/services/permissions.services.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-notifications></app-notifications>\\n<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row header\\\">\\n            <app-header></app-header>\\n    </div>\\n    <div class=\\\"row content\\\">\\n        <router-outlet></router-outlet>\\n    </div>\\n    <div class=\\\"row footer\\\">\\n    </div>\\n</div>\"","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  constructor(\n    private router: Router\n  ) {\n\n    // this.af.authState.subscribe(auth => {\n    //   console.log(auth)\n    //   if (!auth) {\n    //     this.router.navigateByUrl('/login');\n    //   }\n    // })\n    // console.log(this.af.auth.currentUser)\n\n  }\n}\n","import { PermissionsServices } from './services/permissions.services';\r\nimport { ItemsTypesServices } from './services/itemsTypes.services';\r\nimport { MainServices } from './services/main.services';\r\nimport { MessageService } from 'primeng/components/common/messageservice';\r\nimport { AuthGuard } from './services/auth.services';\r\n\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { HttpModule } from '@angular/http';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport {GrowlModule} from 'primeng/growl';\r\nimport {MessagesModule} from 'primeng/messages';\r\nimport {MessageModule} from 'primeng/message';\r\n\r\n\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {MatAutocompleteModule, MatInputModule} from '@angular/material';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\n\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { UsersComponent } from './components/users/users.component';\r\nimport { AdduserComponent } from './components/adduser/adduser.component';\r\nimport { UsersTypesComponent } from './components/users-types/users-types.component';\r\nimport { TypesComponent } from './components/types/types.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { HeaderComponent } from './components/header/header.component';\r\nimport { FooterComponent } from './components/footer/footer.component';\r\nimport { AddUsersTypeComponent } from './components/add-users-type/add-users-type.component';\r\nimport { ItemsComponent } from './components/items/items.component';\r\nimport { AddItemComponent } from './components/add-item/add-item.component';\r\nimport { AddItemsTypeComponent } from './components/add-items-type/add-items-type.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { NotificationsComponent } from './components/notifications/notifications.component';\r\nimport { NotificationsServices } from './services/notifications.services';\r\nimport { UpdateInvoiceComponent } from './components/update-invoice/update-invoice.component';\r\nimport { InvoicesServices } from './services/invoices.services';\r\nimport { InvoicesComponent } from './components/invoices/invoices.component';\r\nimport { HomeServices } from './services/home.services';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    TypesComponent,\r\n    LoginComponent,\r\n    UsersComponent,\r\n    AdduserComponent,\r\n    UsersTypesComponent,\r\n    HeaderComponent,\r\n    FooterComponent,\r\n    AddUsersTypeComponent,\r\n    ItemsComponent,\r\n    AddItemComponent,\r\n    AddItemsTypeComponent,\r\n    HomeComponent,\r\n    NotificationsComponent,\r\n    UpdateInvoiceComponent,\r\n    InvoicesComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    BrowserAnimationsModule,\r\n    MatAutocompleteModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forRoot([\r\n      { path: \"\", component: HomeComponent, canActivate: [AuthGuard]},\r\n      { path: \"login\", component: LoginComponent},\r\n      { path: \"users\", component: UsersComponent, canActivate: [AuthGuard]},\r\n      { path: \"addUser\", component: AdduserComponent, canActivate: [AuthGuard]},\r\n      { path: \"updateUser/:id\", component: AdduserComponent, canActivate: [AuthGuard]},\r\n      { path: \"usersTypes\", component: UsersTypesComponent, canActivate: [AuthGuard]},\r\n      { path: \"addUserType\", component: AddUsersTypeComponent, canActivate: [AuthGuard]},\r\n      { path: \"updateUserType/:id\", component: AddUsersTypeComponent, canActivate: [AuthGuard]},\r\n      { path: \"items\", component: ItemsComponent, canActivate: [AuthGuard]},\r\n      { path: \"addItem\", component: AddItemComponent, canActivate: [AuthGuard]},\r\n      { path: \"updateItem/:id\", component: AddItemComponent, canActivate: [AuthGuard]},\r\n      { path: \"itemsTypes\", component: TypesComponent, canActivate: [AuthGuard]},\r\n      { path: \"addItemsType\", component: AddItemsTypeComponent, canActivate: [AuthGuard]},\r\n      { path: \"updateItemsType/:id\", component: AddItemsTypeComponent, canActivate: [AuthGuard]},\r\n      { path: \"addInvoice\", component: UpdateInvoiceComponent, canActivate: [AuthGuard]},\r\n      { path: \"updateInvoice/:id\", component: UpdateInvoiceComponent, canActivate: [AuthGuard]},\r\n      { path: \"invoices\", component: InvoicesComponent, canActivate: [AuthGuard]}\r\n    ]),\r\n    HttpModule,\r\n    HttpClientModule,\r\n    GrowlModule,\r\n    MessagesModule,\r\n    MessageModule\r\n  ],\r\n  providers: [\r\n    AuthGuard,\r\n    MessageService,\r\n    NotificationsServices,\r\n    MainServices,\r\n    ItemsTypesServices,\r\n    InvoicesServices,\r\n    PermissionsServices,\r\n    HomeServices\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"col-xs-12\\\">\\r\\n  <div class=\\\"panel panel-primary\\\">\\r\\n    <div class=\\\"panel-heading\\\" *ngIf=\\\"state == 'Edit' && item\\\">Edit Item</div>\\r\\n    <div class=\\\"panel-heading\\\" *ngIf=\\\"state == 'Add'\\\">Add Item</div>\\r\\n    <div class=\\\"panel-body\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n\\r\\n\\r\\n        <div class=\\\"col-xs-12\\\" *ngIf=\\\"state == 'Edit' && item\\\">\\r\\n          <form>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"item_name\\\">Item Name</label>\\r\\n              <input autocomplete=\\\"no\\\" name=\\\"item_name\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"item_name\\\" [(ngModel)]=\\\"item.item_name\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"item_description\\\">Item Description</label>\\r\\n              <textarea name=\\\"item_description\\\" class=\\\"form-control\\\" id=\\\"item_description\\\" [(ngModel)]=\\\"item.item_description\\\" cols=\\\"30\\\"\\r\\n                rows=\\\"10\\\"></textarea>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"item_type\\\">Item Type</label>\\r\\n              <select name=\\\"item_type\\\" class=\\\"form-control\\\" id=\\\"item_type\\\" [(ngModel)]=\\\"item.item_type\\\">\\r\\n                <option *ngFor=\\\"let type of types\\\" value=\\\"{{type.ptype_id}}\\\">{{type.ptype_name}}</option>\\r\\n              </select>\\r\\n            </div>\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-default\\\" (click)=\\\"editItem(item)\\\">Edit</button>\\r\\n          </form>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"col-xs-12\\\" *ngIf=\\\"state == 'Add'\\\">\\r\\n          <form>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"item_name\\\">Item Name</label>\\r\\n              <input autocomplete=\\\"no\\\" name=\\\"item_name\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"item_name\\\" [(ngModel)]=\\\"item.item_name\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"item_description\\\">Item Description</label>\\r\\n              <textarea name=\\\"item_description\\\" class=\\\"form-control\\\" id=\\\"item_description\\\" [(ngModel)]=\\\"item.item_description\\\" cols=\\\"30\\\"\\r\\n                rows=\\\"10\\\"></textarea>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"item_type\\\">Item Type</label>\\r\\n              <select name=\\\"item_type\\\" class=\\\"form-control\\\" id=\\\"item_type\\\" [(ngModel)]=\\\"item.item_type\\\">\\r\\n                <option value=\\\"\\\">-- Please Select --</option>\\r\\n                <option *ngFor=\\\"let type of types\\\" value=\\\"{{type.ptype_id}}\\\">{{type.ptype_name}}</option>\\r\\n              </select>\\r\\n            </div>\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-default\\\" (click)=\\\"addItem(item)\\\">Add</button>\\r\\n          </form>\\r\\n        </div>\\r\\n\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { ItemsTypesServices } from './../../services/itemsTypes.services';\r\nimport { Message } from 'primeng/components/common/api';\r\nimport { NotificationsServices } from './../../services/notifications.services';\r\nimport { MainServices } from './../../services/main.services';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-add-item',\r\n  templateUrl: './add-item.component.html',\r\n  styleUrls: ['./add-item.component.css']\r\n})\r\nexport class AddItemComponent implements OnInit {\r\n\r\n  item;\r\n  id;\r\n  state;\r\n  types;\r\n  msgs: Message[] = [];\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private main: MainServices,\r\n    private mess: NotificationsServices,\r\n    private itemsTypes: ItemsTypesServices\r\n  ) {\r\n    this.route.params.subscribe(param => {\r\n      this.id = param.id;\r\n      this.getTypes()\r\n      if (this.id !== undefined) {\r\n        this.state = \"Edit\";\r\n        this.getItemData();\r\n      }else {\r\n        this.state = \"Add\";\r\n        this.item = {\r\n          item_name: \"\",\r\n          item_description: \"\",\r\n          item_type: \"\"\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  getItemData() {\r\n    this.main.getRequest('items/' + this.id).subscribe(data => {\r\n      this.item = data[0];\r\n      console.log(this.item);\r\n    })\r\n  }\r\n\r\n  editItem(item){\r\n    this.main.PutRequest('items/' + item.item_id, item).subscribe(res => {\r\n      console.log(res);\r\n      this.mess.showMessage(\"Success\", \"Edit item Done\", \"success\");\r\n    })\r\n  }\r\n\r\n  addItem(item){\r\n    Number(item.item_type)\r\n    console.log(item)\r\n    this.main.PostRequest('items', item).subscribe(res => {\r\n      console.log(res);\r\n      this.item = {\r\n        item_name: \"\",\r\n        item_description: \"\",\r\n        item_type: \"\"\r\n      }\r\n      this.mess.showMessage(\"Success\", \"Add item Done\", \"success\");\r\n    });\r\n  }\r\n\r\n  getTypes(){\r\n    this.itemsTypes.getAll().subscribe(data => {\r\n      this.types = data;\r\n      console.log(this.types)\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"col-xs-12\\\">\\n\\n\\n\\n  <div class=\\\"panel panel-primary\\\" *ngIf=\\\"state == 'Edit' && type\\\">\\n    <div class=\\\"panel-heading\\\" *ngIf=\\\"state == 'Edit' && type\\\">Edit Item Type</div>\\n    <div class=\\\"panel-body\\\">\\n      <div class=\\\"row\\\">\\n\\n        <div class=\\\"col-xs-12\\\">\\n\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"ptype_name\\\">Item Name</label>\\n            <input autocomplete=\\\"no\\\" name=\\\"ptype_name\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"ptype_name\\\" [(ngModel)]=\\\"type.ptype_name\\\">\\n          </div>\\n\\n          <button type=\\\"submit\\\" *ngIf=\\\"state == 'Edit' && type\\\" class=\\\"btn btn-default\\\" (click)=\\\"editItemType(type)\\\">Edit</button>\\n\\n        </div>\\n\\n      </div>\\n    </div>\\n  </div>\\n\\n\\n\\n  <div class=\\\"panel panel-primary\\\" *ngIf=\\\"state == 'Add'\\\">\\n    <div class=\\\"panel-heading\\\" *ngIf=\\\"state == 'Add'\\\">Add Item Type</div>\\n    <div class=\\\"panel-body\\\">\\n      <div class=\\\"row\\\">\\n\\n        <div class=\\\"col-xs-12\\\">\\n\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"ptype_name\\\">Item Name</label>\\n            <input autocomplete=\\\"no\\\" name=\\\"ptype_name\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"ptype_name\\\" [(ngModel)]=\\\"type.ptype_name\\\">\\n          </div>\\n\\n          <button type=\\\"submit\\\" *ngIf=\\\"state == 'Add'\\\" class=\\\"btn btn-default\\\" (click)=\\\"addItemType(type)\\\">Add</button>\\n\\n        </div>\\n\\n      </div>\\n    </div>\\n  </div>\\n\\n\\n\\n</div>\"","import { Message } from 'primeng/components/common/api';\r\nimport { NotificationsServices } from './../../services/notifications.services';\r\nimport { MainServices } from './../../services/main.services';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-add-items-type',\r\n  templateUrl: './add-items-type.component.html',\r\n  styleUrls: ['./add-items-type.component.css']\r\n})\r\nexport class AddItemsTypeComponent implements OnInit {\r\n\r\n  type;\r\n  id;\r\n  state;\r\n  msgs: Message[] = [];\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private main: MainServices,\r\n    private mess: NotificationsServices\r\n  ) {\r\n    this.route.params.subscribe(param => {\r\n      this.id = param.id;\r\n      if (this.id !== undefined) {\r\n        this.state = \"Edit\";\r\n        this.getItemTypeData();\r\n      } else {\r\n        this.state = \"Add\";\r\n        this.type = {\r\n          ptype_name: \"\"\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  getItemTypeData() {\r\n    this.main.getRequest('prodtypes/' + this.id).subscribe(data => {\r\n      this.type = data[0];\r\n    })\r\n  }\r\n\r\n  editItemType(itemType) {\r\n    if (itemType.ptype_name !== \"\") {\r\n      this.main.PutRequest('prodtypes/' + itemType.ptype_id, itemType).subscribe(res => {\r\n        this.mess.showMessage(\"Success\", \"Edit item Done\", \"success\");\r\n      })\r\n    } else {\r\n      this.mess.showMessage(\"Failed\", \"Type name can't ne empty\", \"error\");\r\n    }\r\n  }\r\n\r\n  addItemType(itemType) {\r\n    if (itemType.ptype_name !== \"\") {\r\n      this.main.PostRequest('prodtypes', itemType).subscribe(res => {\r\n        this.type = {\r\n          ptype_name: \"\"\r\n        }\r\n        this.mess.showMessage(\"Success\", \"Add item Type Done\", \"success\");\r\n      });\r\n    } else {\r\n      this.mess.showMessage(\"Failed\", \"Type name can't ne empty\", \"error\");\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"col-xs-12\\\">\\n  <div class=\\\"panel panel-primary\\\">\\n    <div class=\\\"panel-heading\\\" *ngIf=\\\"state == 'Edit' && type\\\">Edit Users Type</div>\\n    <div class=\\\"panel-heading\\\" *ngIf=\\\"state == 'Add'\\\">Add Users Type</div>\\n    <div class=\\\"panel-body\\\">\\n      <div class=\\\"row\\\">\\n\\n\\n        <div class=\\\"col-xs-12\\\" *ngIf=\\\"state == 'Edit' && type\\\">\\n          <form>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"utype_id\\\">User Type ID</label>\\n              <input autocomplete=\\\"no\\\" name=\\\"utype_id\\\" type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"utype_id\\\" [(ngModel)]=\\\"type.utype_id\\\">\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"utype_name\\\">User Type Name</label>\\n              <input autocomplete=\\\"no\\\" name=\\\"utype_name\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"utype_name\\\" [(ngModel)]=\\\"type.utype_name\\\">\\n            </div>\\n            <button type=\\\"submit\\\" class=\\\"btn btn-default\\\" (click)=\\\"editUserType(type)\\\">Edit</button>\\n          </form>\\n        </div>\\n\\n\\n        <div class=\\\"col-xs-12\\\" *ngIf=\\\"state == 'Add'\\\">\\n          <form>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"utype_id\\\">User Type ID</label>\\n              <input autocomplete=\\\"no\\\" name=\\\"utype_id\\\" type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"utype_id\\\" [(ngModel)]=\\\"type.utype_id\\\">\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"utype_name\\\">User Type Name</label>\\n              <input autocomplete=\\\"no\\\" name=\\\"utype_name\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"type.utype_name\\\">\\n            </div>\\n            <button type=\\\"submit\\\" class=\\\"btn btn-default\\\" (click)=\\\"addUserType(type)\\\">Add</button>\\n          </form>\\n        </div>\\n\\n\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { NotificationsServices } from './../../services/notifications.services';\r\nimport { MainServices } from './../../services/main.services';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-add-users-type',\r\n  templateUrl: './add-users-type.component.html',\r\n  styleUrls: ['./add-users-type.component.css']\r\n})\r\nexport class AddUsersTypeComponent implements OnInit {\r\n\r\n  type;\r\n  id;\r\n  state;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private main: MainServices,\r\n    private mess: NotificationsServices\r\n  ) {\r\n    this.route.params.subscribe(param => {\r\n      this.id = param.id;\r\n      if (this.id !== undefined) {\r\n        this.state = \"Edit\";\r\n        this.getTypeData(this.id);\r\n      } else {\r\n        this.state = \"Add\";\r\n        this.type = {\r\n          utype_name: \"\",\r\n          utype_id: \"\"\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  getTypeData(id) {\r\n    this.main.getRequest('userstypes/' + id).subscribe(data => {\r\n      this.type = data[0];\r\n    })\r\n  }\r\n\r\n  editUserType(type) {\r\n    this.main.PutRequest('userstypes/' + type._id, type).subscribe(res => {\r\n      this.mess.showMessage(\"Success\", \"Edit type Done\", \"success\");\r\n    })\r\n  }\r\n\r\n  addUserType(type) {\r\n    this.main.PostRequest('userstypes', type).subscribe(res => {\r\n      this.type = {\r\n        utype_name: \"\",\r\n        utype_id: \"\"\r\n      }\r\n      this.mess.showMessage(\"Success\", \"Add type Done\", \"success\");\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"col-xs-12\\\">\\r\\n  <div class=\\\"panel panel-primary\\\">\\r\\n    <div class=\\\"panel-heading\\\" *ngIf=\\\"state == 'Edit' && user\\\">Edit Users</div>\\r\\n    <div class=\\\"panel-heading\\\" *ngIf=\\\"state == 'Add'\\\">Add Users</div>\\r\\n    <div class=\\\"panel-body\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n\\r\\n\\r\\n        <div class=\\\"col-xs-12\\\" *ngIf=\\\"state == 'Edit' && user\\\">\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"user_name\\\">Name</label>\\r\\n            <input autocomplete=\\\"no\\\" name=\\\"user_name\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"user_name\\\" [(ngModel)]=\\\"user.name\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"user_UserName\\\">UserName</label>\\r\\n            <input autocomplete=\\\"no\\\" name=\\\"user_UserName\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"user_UserName\\\" [(ngModel)]=\\\"user.user_name\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"user_email\\\">Email</label>\\r\\n            <input autocomplete=\\\"no\\\" name=\\\"user_email\\\" type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"user_email\\\" [(ngModel)]=\\\"user.email\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"user_type\\\">type</label>\\r\\n            <select name=\\\"user_type\\\" id=\\\"user_type\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.utype_id\\\">\\r\\n              <option value=\\\"\\\">-- Please Select --</option>\\r\\n              <option *ngFor=\\\"let type of types\\\" value=\\\"{{type.utype_id}}\\\">{{type.utype_name}}</option>\\r\\n            </select>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"user_password\\\">Password</label>\\r\\n            <input autocomplete=\\\"no\\\" name=\\\"user_password\\\" type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"user_password\\\" [(ngModel)]=\\\"user.password\\\">\\r\\n            <span class=\\\"inputNote\\\">please if you need to update any thing her you need to write your password twise.</span>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"user_confirmPassword\\\">Confirm Password</label>\\r\\n            <input autocomplete=\\\"no\\\" name=\\\"user_confirmPassword\\\" type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"user_confirmPassword\\\" [(ngModel)]=\\\"user.confirm\\\">\\r\\n          </div>\\r\\n\\r\\n          <button type=\\\"submit\\\" class=\\\"btn btn-default\\\" (click)=\\\"editUser(user)\\\">Edit</button>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"col-xs-12\\\" *ngIf=\\\"state == 'Add'\\\">\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"user_name\\\">Name</label>\\r\\n            <input autocomplete=\\\"no\\\" name=\\\"user_name\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"user_name\\\" [(ngModel)]=\\\"user.name\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"user_UserName\\\">UserName</label>\\r\\n            <input autocomplete=\\\"no\\\" name=\\\"user_UserName\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"user_UserName\\\" [(ngModel)]=\\\"user.user_name\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"user_email\\\">Email</label>\\r\\n            <input autocomplete=\\\"no\\\" name=\\\"user_email\\\" type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"user_email\\\" [(ngModel)]=\\\"user.email\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"user_type\\\">type</label>\\r\\n            <select name=\\\"user_type\\\" id=\\\"user_type\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.utype_id\\\">\\r\\n              <option value=\\\"\\\">-- Please Select --</option>\\r\\n              <option *ngFor=\\\"let type of types\\\" value=\\\"{{type.utype_id}}\\\">{{type.utype_name}}</option>\\r\\n            </select>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"user_password\\\">Password</label>\\r\\n            <input autocomplete=\\\"no\\\" name=\\\"user_password\\\" type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"user_password\\\" [(ngModel)]=\\\"user.password\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"user_confirmPassword\\\">Confirm Password</label>\\r\\n            <input autocomplete=\\\"no\\\" name=\\\"user_confirmPassword\\\" type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"user_confirmPassword\\\" [(ngModel)]=\\\"user.confirm\\\">\\r\\n          </div>\\r\\n\\r\\n\\r\\n          <button type=\\\"submit\\\" class=\\\"btn btn-default\\\" (click)=\\\"addAndUpdateUser(user)\\\">Add</button>\\r\\n        </div>\\r\\n\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Message } from 'primeng/components/common/api';\r\nimport { NotificationsServices } from './../../services/notifications.services';\r\nimport { MainServices } from './../../services/main.services';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-adduser',\r\n  templateUrl: './adduser.component.html',\r\n  styleUrls: ['./adduser.component.css']\r\n})\r\nexport class AdduserComponent implements OnInit {\r\n\r\n  user;\r\n  types;\r\n  id;\r\n  state;\r\n  msgs: Message[] = [];\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private main: MainServices,\r\n    private mess: NotificationsServices\r\n  ) {\r\n    this.route.params.subscribe(param => {\r\n      this.id = param.id;\r\n      // console.log(this.id, typeof this.id, Number(this.id), typeof Number(this.id))\r\n      this.getUsersTypes();\r\n      if (this.id !== undefined) {\r\n        this.state = \"Edit\";\r\n        this.getUserData(this.id);\r\n      } else if (this.id === undefined) {\r\n        this.state = \"Add\";\r\n        this.user = {\r\n          name: \"\",\r\n          user_name: \"\",\r\n          email: \"\",\r\n          utype_id: \"\",\r\n          password: \"\",\r\n          confirm: \"\"\r\n        }\r\n      } else {\r\n        this.router.navigateByUrl('/login');\r\n      }\r\n    })\r\n  }\r\n\r\n  getUserData(id) {\r\n    this.main.getRequest('users/' + id).subscribe(data => {\r\n      this.user = data;\r\n      console.log(this.user);\r\n    })\r\n  }\r\n\r\n  editUser(user) {\r\n    if (user.password === user.confirm) {\r\n      this.main.PutRequest('users/' + this.id, user).subscribe(res => {\r\n        console.log(res);\r\n        this.mess.showMessage(\"Success\", \"Edit user Done\", \"success\");\r\n      })\r\n    } else {\r\n      this.mess.showMessage(\"Error\", \"Password and confirm password should be the same\", \"error\");\r\n    }\r\n  }\r\n\r\n  addAndUpdateUser(user) {\r\n    if (user.password === user.confirm) {\r\n      delete user[\"confirm\"];\r\n      this.main.PostRequest('users', user).subscribe(res => {\r\n        console.log(res);\r\n        this.user = {\r\n          name: \"\",\r\n          user_name: \"\",\r\n          email: \"\",\r\n          utype_id: \"\",\r\n          password: \"\",\r\n          confirm: \"\"\r\n        }\r\n        this.mess.showMessage(\"Success\", \"Add user Done\", \"success\");\r\n      }, err => {\r\n        console.log(err)\r\n        this.mess.showMessage(\"Success\", err.error, \"error\");\r\n      });\r\n    } else {\r\n      this.mess.showMessage(\"Error\", \"Password and confirm password should be the same\", \"error\");\r\n    }\r\n  }\r\n\r\n  getUsersTypes() {\r\n    this.main.getRequest('userstypes').subscribe(data => {\r\n      this.types = data;\r\n      console.log(data)\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>\\n  footer works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".navbar-brand>img {\\n    height: 100%;\\n    width: auto;\\n}\"","module.exports = \"<app-notifications></app-notifications>\\r\\n<nav class=\\\"navbar navbar-default\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n      <div class=\\\"navbar-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-example-navbar-collapse-1\\\" aria-expanded=\\\"false\\\">\\r\\n          <span class=\\\"sr-only\\\">Toggle navigation</span>\\r\\n          <span class=\\\"icon-bar\\\"></span>\\r\\n          <span class=\\\"icon-bar\\\"></span>\\r\\n          <span class=\\\"icon-bar\\\"></span>\\r\\n        </button>\\r\\n        <a class=\\\"navbar-brand\\\" href=\\\"#\\\">\\r\\n          <img src=\\\"../../../assets/logo.png\\\" alt=\\\"\\\">\\r\\n        </a>\\r\\n      </div>\\r\\n  \\r\\n      <div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\">\\r\\n        <ul class=\\\"nav navbar-nav\\\">\\r\\n          <li class=\\\"active\\\"><a routerLink=\\\"/\\\">Home <span class=\\\"sr-only\\\">(current)</span></a></li>\\r\\n          <li class=\\\"dropdown\\\" [ngClass]=\\\"{'disBg': currentUserType !== 'admin'}\\\">\\r\\n            <a class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">Users <span class=\\\"caret\\\"></span></a>\\r\\n            <ul class=\\\"dropdown-menu\\\">\\r\\n              <li><a routerLink=\\\"/users\\\">View All Users</a></li>\\r\\n              <li><a routerLink=\\\"/addUser\\\">Add User</a></li>\\r\\n              <li><a routerLink=\\\"/usersTypes\\\">Users Types</a></li>\\r\\n              <li><a routerLink=\\\"/addUserType\\\">Add Users Type</a></li>\\r\\n            </ul>\\r\\n          </li>\\r\\n          <li class=\\\"dropdown\\\" [ngClass]=\\\"{'disBg': currentUserType !== 'admin'}\\\">\\r\\n            <a class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">Items <span class=\\\"caret\\\"></span></a>\\r\\n            <ul class=\\\"dropdown-menu\\\">\\r\\n              <li><a routerLink=\\\"/items\\\">View All Items</a></li>\\r\\n              <li><a routerLink=\\\"/addItem\\\">Add Item</a></li>\\r\\n              <li><a routerLink=\\\"/itemsTypes\\\">Items Types</a></li>\\r\\n              <li><a routerLink=\\\"/addItemsType\\\">Add Items Type</a></li>\\r\\n            </ul>\\r\\n          </li>\\r\\n          <li class=\\\"dropdown\\\">\\r\\n            <a class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">Invoices <span class=\\\"caret\\\"></span></a>\\r\\n            <ul class=\\\"dropdown-menu\\\">\\r\\n              <li><a routerLink=\\\"/invoices\\\">View All Invoices</a></li>\\r\\n              <li><a routerLink=\\\"/addInvoice\\\" [ngClass]=\\\"{'disBg': currentUserType !== 'accountant' && currentUserType !== 'admin'}\\\">Add Invoice</a></li>\\r\\n            </ul>\\r\\n          </li>\\r\\n        </ul>\\r\\n        <ul class=\\\"nav navbar-nav navbar-right\\\">\\r\\n          <li><a (click)=\\\"logOut()\\\">Log Out</a></li>\\r\\n        </ul>\\r\\n      </div><!-- /.navbar-collapse -->\\r\\n    </div><!-- /.container-fluid -->\\r\\n  </nav>\"","import { PermissionsServices } from './../../services/permissions.services';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  currentUserType = this.permissionsServices.getCurrentUserType();\r\n  \r\n  constructor(\r\n    private router: Router,\r\n    private permissionsServices: PermissionsServices\r\n  ) { }\r\n\r\n  logOut() {\r\n    localStorage.removeItem('currentUser');\r\n    console.log(\"sign out\");\r\n    this.router.navigateByUrl('/login');\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \".counter {\\n    background-color:#f5f5f5;\\n    padding: 20px 0;\\n    border-radius: 5px;\\n}\\n\\n.count-title {\\n    font-size: 40px;\\n    font-weight: normal;\\n    margin-top: 10px;\\n    margin-bottom: 0;\\n    text-align: center;\\n}\\n\\n.count-text {\\n    font-size: 13px;\\n    font-weight: normal;\\n    margin-top: 10px;\\n    margin-bottom: 0;\\n    text-align: center;\\n}\\n\\n.fa-2x {\\n    margin: 0 auto;\\n    float: none;\\n    display: table;\\n    color: #4ad1e5;\\n}\"","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <br/>\\r\\n        <div class=\\\"col text-center\\\">\\r\\n            <h2>Welcome</h2>\\r\\n            <p>{{username}}</p>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row text-center\\\">\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n            <div class=\\\"counter\\\">\\r\\n                <i class=\\\"fa fa-code fa-2x\\\"></i>\\r\\n                <h2>100</h2>\\r\\n                <p class=\\\"count-text \\\">Our Customer</p>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n            <div class=\\\"counter\\\">\\r\\n                <i class=\\\"fa fa-coffee fa-2x\\\"></i>\\r\\n                <h2>1700</h2>\\r\\n                <p class=\\\"count-text \\\">Happy Clients</p>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n            <div class=\\\"counter\\\">\\r\\n                <i class=\\\"fa fa-lightbulb-o fa-2x\\\"></i>\\r\\n                <h2>{{numberOfItems}}</h2>\\r\\n                <p class=\\\"count-text \\\">Out Items</p>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n            <div class=\\\"counter\\\">\\r\\n                <i class=\\\"fa fa-file-text fa-2x\\\"></i>\\r\\n                <h2>{{numberOfInvoices}}</h2>\\r\\n                <p class=\\\"count-text \\\">Our Invoices</p>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { NotificationsServices } from './../../services/notifications.services';\r\nimport { HomeServices } from '../../services/home.services';\r\nimport { PermissionsServices } from '../../services/permissions.services';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css'],\r\n  providers: [NotificationsServices]\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  username = this.user.getCurrentUserName();\r\n  numberOfItems;\r\n  numberOfInvoices;\r\n\r\n  constructor(\r\n    private mess: NotificationsServices,\r\n    private home: HomeServices,\r\n    private user: PermissionsServices\r\n  ) {\r\n    this.getNumItems();\r\n    this.getNumInvoices();\r\n  }\r\n\r\n  getNumItems(){\r\n    this.home.getNumberOfItems().subscribe(data => {\r\n      this.numberOfItems = data;\r\n      // console.log(this.numberOfItems)\r\n    });\r\n  }\r\n\r\n  getNumInvoices(){\r\n    this.home.getNumberOfInvoices().subscribe(data => {\r\n      this.numberOfInvoices = data;\r\n      // console.log(this.numberOfInvoices)\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"table tr td span {\\r\\n    font-weight: bold;\\r\\n    text-decoration: underline;\\r\\n}\"","module.exports = \"<div class=\\\"col-xs-12\\\">\\r\\n  <div class=\\\"panel panel-primary\\\">\\r\\n    <div class=\\\"panel-heading\\\">All Invoices</div>\\r\\n    <div class=\\\"panel-body\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xs-12\\\">\\r\\n          <table class=\\\"table\\\">\\r\\n            <thead class=\\\"black white-text\\\">\\r\\n              <tr>\\r\\n                <th scope=\\\"col\\\">ID</th>\\r\\n                <th scope=\\\"col\\\">Name</th>\\r\\n                <th scope=\\\"col\\\">Type</th>\\r\\n                <th scope=\\\"col\\\">Date</th>\\r\\n                <th scope=\\\"col\\\">Company Name</th>\\r\\n                <th scope=\\\"col\\\">Po Number</th>\\r\\n                <th scope=\\\"col\\\">Actions</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let invoice of invoices; let index = index\\\">\\r\\n                <th scope=\\\"row\\\">{{index + 1}}</th>\\r\\n                <td>{{invoice.name}}</td>\\r\\n                <td>{{invoice.typename}}</td>\\r\\n                <td>From <span>{{invoice.data_from}}</span> To <span>{{invoice.data_to}}</span></td>\\r\\n                <td>{{invoice.company_name}}</td>\\r\\n                <td>{{invoice.po_number}}</td>\\r\\n                <td class=\\\"actions\\\">\\r\\n                  <a (click)=\\\"deleteInvoice(invoice.inv_id)\\\" [ngClass]=\\\"{'visHidden': currentUserType !== 'admin'}\\\">\\r\\n                    <i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                  </a>\\r\\n                  <a routerLink=\\\"{{'/updateInvoice/' + invoice.inv_id}}\\\" [ngClass]=\\\"{'visHidden': currentUserType !== 'account manager' && currentUserType !== 'admin' && invoice.accountant_lock === true}\\\">\\r\\n                    <i class=\\\"fa fa-pencil-square\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                  </a>\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { PermissionsServices } from './../../services/permissions.services';\nimport { Component, OnInit } from '@angular/core';\nimport { NotificationsServices } from './../../services/notifications.services';\nimport { InvoicesServices } from '../../services/invoices.services';\n\n@Component({\n  selector: 'app-invoices',\n  templateUrl: './invoices.component.html',\n  styleUrls: ['./invoices.component.css']\n})\nexport class InvoicesComponent implements OnInit {\n\n  invoices;\n  currentUserType = this.permissionsServices.getCurrentUserType();\n\n  constructor(\n    private mess: NotificationsServices,\n    private invoicesServices: InvoicesServices,\n    private permissionsServices: PermissionsServices\n  ) {\n    console.log(this.currentUserType)\n    this.getAllInvoices();\n  }\n\n  getAllInvoices() {\n    this.invoicesServices.getAllInvoices().subscribe(data => {\n      console.log(data)\n      this.invoices = data;\n    })\n  }\n\n  deleteInvoice(id) {\n    this.invoicesServices.deleteInvoice(id).subscribe(res => {\n      this.mess.showMessage(\"Success\", \"Delete invoice Done\", \"warn\");\n      this.getAllInvoices();\n    });\n  }\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"col-xs-12\\\">\\n  <div class=\\\"panel panel-primary\\\">\\n    <div class=\\\"panel-heading\\\">All Items</div>\\n    <div class=\\\"panel-body\\\">\\n      <div class=\\\"row\\\">\\n\\n        <div class=\\\"col-xs-12\\\">\\n          <table class=\\\"table\\\">\\n            <thead class=\\\"black white-text\\\">\\n              <tr>\\n                <th scope=\\\"col\\\">ID</th>\\n                <th scope=\\\"col\\\">Name</th>\\n                <th scope=\\\"col\\\">Description</th>\\n                <th scope=\\\"col\\\">Type</th>\\n                <th scope=\\\"col\\\">Actions</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let item of items; let index = index\\\">\\n                <!-- <th scope=\\\"row\\\">{{item.item_id}}</th> -->\\n                <th scope=\\\"row\\\">{{index + 1}}</th>\\n                <td>{{item.item_name}}</td>\\n                <td>{{item.item_description}}</td>\\n                <td>{{item.item_type}}</td>\\n                <td class=\\\"actions\\\">\\n                  <a (click)=\\\"deleteItem(item.item_id)\\\">\\n                    <i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i>\\n                  </a>\\n                  <a routerLink=\\\"{{'/updateItem/' + item.item_id}}\\\">\\n                    <i class=\\\"fa fa-pencil-square\\\" aria-hidden=\\\"true\\\"></i>\\n                  </a>\\n                </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n        </div>\\n\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { MainServices } from './../../services/main.services';\nimport { Component, OnInit } from '@angular/core';\nimport { NotificationsServices } from './../../services/notifications.services';\n\n@Component({\n  selector: 'app-items',\n  templateUrl: './items.component.html',\n  styleUrls: ['./items.component.css']\n})\nexport class ItemsComponent implements OnInit {\n\n  items;\n\n  constructor(\n    private main: MainServices,\n    private mess: NotificationsServices\n  ) {\n    this.getAllItems();\n  }\n\n  getAllItems() {\n    this.main.getRequest('items').subscribe(data => {\n      this.items = data;\n      // console.log(this.items)\n    })\n  }\n\n  deleteItem(item_id){\n    this.main.DeleteRequest('items/' + item_id).subscribe(res => {\n      this.mess.showMessage(\"Success\", \"Delete item Done\", \"warn\");\n      this.getAllItems();\n    });\n  }\n\n  ngOnInit() {\n  }\n\n}","module.exports = \".loginForm {\\n    width: 350px;\\n    margin-top: 100px;\\n}\\n.loginForm h2 {\\n    display: block;\\n    width: 100%;\\n    margin-bottom: 20px;\\n}\\n.loginForm .form-check {\\n    padding: 0;\\n    text-align: center;\\n}\\n.loginForm .form-check button {\\n    margin: 10px;\\n}\"","module.exports = \"<div class=\\\"container loginForm\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <h2 class=\\\"text-center\\\">Welcome</h2>\\r\\n    <br/>\\r\\n    <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n      <form>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <input type=\\\"text\\\" [(ngModel)]=\\\"user_name\\\" class=\\\"form-control\\\" name=\\\"user_name\\\" placeholder=\\\"Your User Name\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <input type=\\\"password\\\" [(ngModel)]=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" placeholder=\\\"Your Password\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-check\\\">\\r\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"login()\\\">Login</button>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { MainServices } from './../../services/main.services';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { NotificationsServices } from './../../services/notifications.services';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  user_name;\r\n  password;\r\n  \r\n  constructor(\r\n    private router: Router,\r\n    private main: MainServices,\r\n    private mess: NotificationsServices\r\n  ) {\r\n    if (localStorage.getItem('currentUser')) {\r\n      this.router.navigateByUrl('/');\r\n    } else {\r\n      this.router.navigateByUrl('/login');\r\n    }\r\n  }\r\n\r\n  login() {\r\n    this.main.PostRequest('login', {user_name: this.user_name, password: this.password}).subscribe(response => {\r\n      console.log(response);\r\n      this.mess.showMessage(\"Success\", \"Login Success\", \"success\");\r\n      localStorage.setItem('currentUser', JSON.stringify(response));\r\n      this.main.setHeaders(localStorage.getItem(\"currentUser\"));\r\n      this.router.navigateByUrl('/');\r\n    }, err => {\r\n      console.log(err.error);\r\n      this.mess.showMessage(\"Error\", err.error, \"error\");\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \":host ::ng-deep button {\\n    margin-right: .25em;\\n}\\n\\n:host ::ng-deep .ui-message,\\n:host ::ng-deep .ui-inputtext {\\n    margin-right: .25em;\\n}\"","module.exports = \"<p-growl></p-growl>\"","import { Component, OnInit } from '@angular/core';\r\nimport { NotificationsServices } from './../../services/notifications.services';\r\n\r\n\r\n@Component({\r\n  selector: 'app-notifications',\r\n  templateUrl: './notifications.component.html',\r\n  styleUrls: ['./notifications.component.css'],\r\n  providers: [NotificationsServices]\r\n})\r\nexport class NotificationsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"col-xs-12\\\">\\n  <div class=\\\"panel panel-primary\\\">\\n    <div class=\\\"panel-heading\\\">All Items Types</div>\\n    <div class=\\\"panel-body\\\">\\n      <div class=\\\"row\\\">\\n\\n        <div class=\\\"col-xs-12\\\">\\n          <table class=\\\"table\\\">\\n            <thead class=\\\"black white-text\\\">\\n              <tr>\\n                <th scope=\\\"col\\\">ID</th>\\n                <th scope=\\\"col\\\">Name</th>\\n                <th scope=\\\"col\\\">Actions</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let type of types; let index = index\\\">\\n                <th scope=\\\"row\\\">{{index + 1}}</th>\\n                <td>{{type.ptype_name}}</td>\\n                <td class=\\\"actions\\\">\\n                  <a (click)=\\\"deleteItemType(type.ptype_id)\\\">\\n                    <i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i>\\n                  </a>\\n                  <a routerLink=\\\"{{'/updateItemsType/' + type.ptype_id}}\\\">\\n                    <i class=\\\"fa fa-pencil-square\\\" aria-hidden=\\\"true\\\"></i>\\n                  </a>\\n                </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n        </div>\\n\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { ItemsTypesServices } from './../../services/itemsTypes.services';\r\nimport { Component } from '@angular/core';\r\nimport { NotificationsServices } from '../../services/notifications.services';\r\n\r\n@Component({\r\n    selector: 'types',\r\n    templateUrl: './types.component.html'\r\n})\r\n\r\nexport class TypesComponent {\r\n\r\n    types;\r\n\r\n    constructor(\r\n        private itemsTypes: ItemsTypesServices,\r\n        private mess: NotificationsServices\r\n    ) {\r\n\r\n        this.getAllItemsTypes();\r\n\r\n    }\r\n\r\n    getAllItemsTypes() {\r\n        this.itemsTypes.getAll().subscribe(data => {\r\n            this.types = data;\r\n        })\r\n    }\r\n\r\n    deleteItemType(id) {\r\n        this.itemsTypes.deleteType(id).subscribe(res => {\r\n            this.mess.showMessage(\"Success\", \"Delete type Done\", \"warn\");\r\n            this.getAllItemsTypes();\r\n        })\r\n    }\r\n\r\n}","module.exports = \"\"","module.exports = \"<div class=\\\"col-xs-12\\\">\\r\\n  <div class=\\\"panel panel-primary\\\">\\r\\n    <div class=\\\"panel-heading\\\" *ngIf=\\\"state == 'Edit' && invoice\\\">Edit Invoice</div>\\r\\n    <div class=\\\"panel-heading\\\" *ngIf=\\\"state == 'Add'\\\">Add Invoice</div>\\r\\n    <div class=\\\"panel-body\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n\\r\\n\\r\\n        <div class=\\\"col-xs-12\\\" *ngIf=\\\"state == 'Edit' && invoice\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"name\\\">Invoice Name</label>\\r\\n            <input autocomplete=\\\"no\\\" name=\\\"name\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" [(ngModel)]=\\\"invoice.name\\\" [disabled]=\\\"currentUserType !== 'admin' && currentUserType !== 'account manager'\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"type\\\">Invoice Type</label>\\r\\n            <select name=\\\"type\\\" class=\\\"form-control\\\" id=\\\"type\\\" [(ngModel)]=\\\"invoice.type_id\\\" [disabled]=\\\"currentUserType !== 'admin' && currentUserType !== 'account manager'\\\">\\r\\n              <option value=\\\"\\\">-- Please Select --</option>\\r\\n              <option *ngFor=\\\"let type of types\\\" value=\\\"{{type.ptype_id}}\\\">{{type.ptype_name}}</option>\\r\\n            </select>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"data_from\\\">Date (From)</label>\\r\\n            <input autocomplete=\\\"no\\\" name=\\\"data_from\\\" type=\\\"date\\\" class=\\\"form-control\\\" id=\\\"data_from\\\" [(ngModel)]=\\\"invoice.data_from\\\" [disabled]=\\\"currentUserType !== 'admin' && currentUserType !== 'account manager'\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"data_to\\\">Date (to)</label>\\r\\n            <input autocomplete=\\\"no\\\" name=\\\"data_to\\\" type=\\\"date\\\" class=\\\"form-control\\\" id=\\\"data_to\\\" [(ngModel)]=\\\"invoice.data_to\\\" [disabled]=\\\"currentUserType !== 'admin' && currentUserType !== 'account manager'\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"price\\\">Price (L.E)</label>\\r\\n            <input autocomplete=\\\"no\\\" name=\\\"price\\\" type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"price\\\" [(ngModel)]=\\\"invoice.price\\\" [disabled]=\\\"currentUserType !== 'admin' && currentUserType !== 'account manager'\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"vat_percentage\\\">Vat</label>\\r\\n            <input autocomplete=\\\"no\\\" name=\\\"vat_percentage\\\" type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"vat_percentage\\\" [(ngModel)]=\\\"invoice.vat_percentage\\\"\\r\\n              readonly>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"company_name\\\">Company Name</label>\\r\\n            <input autocomplete=\\\"no\\\" name=\\\"company_name\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"company_name\\\" [(ngModel)]=\\\"invoice.company_name\\\" [disabled]=\\\"currentUserType !== 'admin' && currentUserType !== 'account manager'\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"client_name\\\">Client Name</label>\\r\\n            <input autocomplete=\\\"no\\\" name=\\\"client_name\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"client_name\\\" [(ngModel)]=\\\"invoice.client_name\\\" [disabled]=\\\"currentUserType !== 'admin' && currentUserType !== 'account manager'\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"client_phone\\\">Client Phone</label>\\r\\n            <input autocomplete=\\\"no\\\" name=\\\"client_phone\\\" type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"client_phone\\\" [(ngModel)]=\\\"invoice.client_phone\\\" [disabled]=\\\"currentUserType !== 'admin' && currentUserType !== 'account manager'\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"po_number\\\">Po Number</label>\\r\\n            <input autocomplete=\\\"no\\\" name=\\\"po_number\\\" type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"po_number\\\" [(ngModel)]=\\\"invoice.po_number\\\" [disabled]=\\\"currentUserType !== 'admin' && currentUserType !== 'account manager'\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"items\\\">Items</label>\\r\\n            <select name=\\\"items\\\" class=\\\"form-control\\\" id=\\\"items\\\" (change)=\\\"addNewItemToInvoice(itemId)\\\" [(ngModel)]=\\\"itemId\\\" [disabled]=\\\"currentUserType !== 'admin'\\\">\\r\\n              <option value=\\\"\\\">-- Please Select --</option>\\r\\n              <option *ngFor=\\\"let item of items\\\" value=\\\"{{item.pitem_id}}\\\">{{item.ptype_name}}</option>\\r\\n            </select>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\" *ngIf=\\\"invoice.items.length > 0\\\">\\r\\n            <label for=\\\"addItems\\\">Add Items</label>\\r\\n            <span *ngFor=\\\"let addItem of invoice.items\\\" class=\\\"addedItemBlock\\\">\\r\\n              <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\" (click)=\\\"removeItemFromInvoice(addItem)\\\"></i>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control col-xs-12\\\" [(ngModel)]=\\\"addItem.item_id\\\" placeholder=\\\"Item ID\\\" readonly>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control col-xs-12\\\" [(ngModel)]=\\\"addItem.item_name\\\" placeholder=\\\"Item Name\\\" [disabled]=\\\"currentUserType !== 'admin'\\\">\\r\\n              <input type=\\\"text\\\" class=\\\"form-control col-xs-12\\\" [(ngModel)]=\\\"addItem.item_description\\\" placeholder=\\\"Item Description\\\" [disabled]=\\\"currentUserType !== 'admin'\\\">\\r\\n              <input type=\\\"text\\\" class=\\\"form-control col-xs-12\\\" [(ngModel)]=\\\"addItem.item_cost\\\" placeholder=\\\"Item Cost\\\" [ngClass]=\\\"{'disBg': currentUserType !== 'admin'}\\\" [disabled]=\\\"currentUserType !== 'admin'\\\">\\r\\n              <input type=\\\"text\\\" class=\\\"form-control col-xs-12\\\" [(ngModel)]=\\\"addItem.item_quantity\\\" placeholder=\\\"Item Quantity\\\" [disabled]=\\\"currentUserType !== 'admin'\\\">\\r\\n              <input type=\\\"text\\\" class=\\\"form-control col-xs-12\\\" [(ngModel)]=\\\"addItem.item_price\\\" placeholder=\\\"Item Price\\\" [disabled]=\\\"currentUserType !== 'admin' && currentUserType !== 'account manager'\\\">\\r\\n            </span>\\r\\n          </div>\\r\\n          <button type=\\\"submit\\\" class=\\\"btn btn-default\\\" (click)=\\\"editInvoice(invoice)\\\">Edit</button>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"col-xs-12\\\" *ngIf=\\\"state == 'Add'\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"name\\\">Invoice Name</label>\\r\\n            <input autocomplete=\\\"no\\\" name=\\\"name\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" [(ngModel)]=\\\"invoice.name\\\" [disabled]=\\\"currentUserType !== 'admin'\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"type\\\">Invoice Type</label>\\r\\n            <select name=\\\"type\\\" class=\\\"form-control\\\" id=\\\"type\\\" [(ngModel)]=\\\"invoice.type_id\\\" [disabled]=\\\"currentUserType !== 'admin'\\\">\\r\\n              <option value=\\\"\\\">-- Please Select --</option>\\r\\n              <option *ngFor=\\\"let type of types\\\" value=\\\"{{type.ptype_id}}\\\">{{type.ptype_name}}</option>\\r\\n            </select>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"data_from\\\">Date (From)</label>\\r\\n            <input autocomplete=\\\"no\\\" name=\\\"data_from\\\" type=\\\"date\\\" class=\\\"form-control\\\" id=\\\"data_from\\\" [(ngModel)]=\\\"invoice.data_from\\\"\\r\\n              [disabled]=\\\"currentUserType !== 'admin'\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"data_to\\\">Date (to)</label>\\r\\n            <input autocomplete=\\\"no\\\" name=\\\"data_to\\\" type=\\\"date\\\" class=\\\"form-control\\\" id=\\\"data_to\\\" [(ngModel)]=\\\"invoice.data_to\\\" [disabled]=\\\"currentUserType !== 'admin'\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"price\\\">Price (L.E)</label>\\r\\n            <input autocomplete=\\\"no\\\" name=\\\"price\\\" type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"price\\\" [(ngModel)]=\\\"invoice.price\\\" [disabled]=\\\"currentUserType !== 'admin'\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"vat_percentage\\\">Vat</label>\\r\\n            <input autocomplete=\\\"no\\\" name=\\\"vat_percentage\\\" type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"vat_percentage\\\" [(ngModel)]=\\\"invoice.vat_percentage\\\"\\r\\n              readonly>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"company_name\\\">Company Name</label>\\r\\n            <input autocomplete=\\\"no\\\" name=\\\"company_name\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"company_name\\\" [(ngModel)]=\\\"invoice.company_name\\\"\\r\\n              [disabled]=\\\"currentUserType !== 'admin'\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"client_name\\\">Client Name</label>\\r\\n            <input autocomplete=\\\"no\\\" name=\\\"client_name\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"client_name\\\" [(ngModel)]=\\\"invoice.client_name\\\"\\r\\n              [disabled]=\\\"currentUserType !== 'admin'\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"client_phone\\\">Client Phone</label>\\r\\n            <input autocomplete=\\\"no\\\" name=\\\"client_phone\\\" type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"client_phone\\\" [(ngModel)]=\\\"invoice.client_phone\\\"\\r\\n              [disabled]=\\\"currentUserType !== 'admin'\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"po_number\\\">Po Number</label>\\r\\n            <input autocomplete=\\\"no\\\" name=\\\"po_number\\\" type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"po_number\\\" [(ngModel)]=\\\"invoice.po_number\\\"\\r\\n              [disabled]=\\\"currentUserType !== 'admin'\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"items\\\">Items</label>\\r\\n            <select name=\\\"items\\\" class=\\\"form-control\\\" id=\\\"items\\\" (change)=\\\"addNewItemToInvoice(itemId)\\\" [(ngModel)]=\\\"itemId\\\">\\r\\n              <option value=\\\"\\\">-- Please Select --</option>\\r\\n              <option *ngFor=\\\"let item of items\\\" value=\\\"{{item.item_id}}\\\">{{item.item_name}}</option>\\r\\n            </select>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\" *ngIf=\\\"invoice.items.length > 0\\\">\\r\\n            <label for=\\\"addItems\\\">Add Items</label>\\r\\n            <span *ngFor=\\\"let addItem of invoice.items\\\" class=\\\"addedItemBlock\\\">\\r\\n              <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\" (click)=\\\"removeItemFromInvoice(addItem)\\\"></i>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control col-xs-12\\\" [(ngModel)]=\\\"addItem.item_id\\\" placeholder=\\\"Item ID\\\" readonly>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control col-xs-12\\\" [(ngModel)]=\\\"addItem.item_name\\\" placeholder=\\\"Item Name\\\" [disabled]=\\\"currentUserType !== 'accountant' && currentUserType !== 'admin'\\\">\\r\\n              <input type=\\\"text\\\" class=\\\"form-control col-xs-12\\\" [(ngModel)]=\\\"addItem.item_description\\\" placeholder=\\\"Item Description\\\" [disabled]=\\\"currentUserType !== 'accountant' && currentUserType !== 'admin'\\\">\\r\\n              <input type=\\\"number\\\" class=\\\"form-control col-xs-12\\\" [(ngModel)]=\\\"addItem.item_cost\\\" placeholder=\\\"Item Cost\\\" [disabled]=\\\"currentUserType !== 'accountant' && currentUserType !== 'admin'\\\">\\r\\n              <input type=\\\"number\\\" class=\\\"form-control col-xs-12\\\" [(ngModel)]=\\\"addItem.item_quantity\\\" placeholder=\\\"Item Quantity\\\" [disabled]=\\\"currentUserType !== 'accountant' && currentUserType !== 'admin'\\\">\\r\\n              <input type=\\\"number\\\" class=\\\"form-control col-xs-12\\\" [(ngModel)]=\\\"addItem.item_price\\\" placeholder=\\\"Item Price\\\" [disabled]=\\\"currentUserType !== 'admin'\\\">\\r\\n            </span>\\r\\n          </div>\\r\\n          <button type=\\\"submit\\\" class=\\\"btn btn-default\\\" (click)=\\\"addNewInvoice(invoice)\\\">Add</button>\\r\\n        </div>\\r\\n\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { PermissionsServices } from './../../services/permissions.services';\r\nimport { NotificationsServices } from './../../services/notifications.services';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { InvoicesServices } from '../../services/invoices.services';\r\nimport { ItemsTypesServices } from '../../services/itemsTypes.services';\r\nimport { ItemsServices } from '../../services/items.services';\r\n\r\n@Component({\r\n  selector: 'app-update-invoice',\r\n  templateUrl: './update-invoice.component.html',\r\n  styleUrls: ['./update-invoice.component.css']\r\n})\r\nexport class UpdateInvoiceComponent implements OnInit {\r\n\r\n  invoice;\r\n  items;\r\n  types;\r\n  id;\r\n  state;\r\n  addItems = [];\r\n  itemId = \"\";\r\n  currentUserType = this.permissionsServices.getCurrentUserType();\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private mess: NotificationsServices,\r\n    private invoiceServices: InvoicesServices,\r\n    private typesServices: ItemsTypesServices,\r\n    private itemsServices: ItemsServices,\r\n    private permissionsServices: PermissionsServices\r\n  ) {\r\n    this.route.params.subscribe(param => {\r\n      this.id = param.id;\r\n      this.getTypes();\r\n      this.getItems();\r\n      if (this.id !== undefined) {\r\n        this.state = \"Edit\";\r\n        this.getIvoiceData(this.id);\r\n      } else {\r\n        console.log(this.currentUserType);\r\n        if (this.currentUserType === \"account manager\") {\r\n          this.router.navigateByUrl('/');\r\n        }\r\n        this.state = \"Add\";\r\n        this.invoice = {\r\n          items: [],\r\n          name: \"\",\r\n          type_id: \"\",\r\n          data_from: \"\",\r\n          data_to: \"\",\r\n          price: \"\",\r\n          vat_percentage: 14,\r\n          company_name: \"\",\r\n          client_name: \"\",\r\n          client_phone: \"\",\r\n          po_number: \"\",\r\n          accountant_lock: \"\",\r\n          account_manager_lock: \"\"\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  getIvoiceData(id) {\r\n    this.invoiceServices.getInvoice(id).subscribe(data => {\r\n      this.invoice = data[0];\r\n    })\r\n  }\r\n\r\n  editInvoice(invoice) {\r\n    if (this.currentUserType === 'account manager') {\r\n      invoice.account_manager_lock = true;\r\n    }\r\n    this.invoiceServices.editInvoice(this.id, invoice).subscribe(res => {\r\n      this.mess.showMessage(\"Success\", \"Edit invoice Done\", \"success\");\r\n    })\r\n  }\r\n\r\n  addNewInvoice(invoice) {\r\n    // console.log(invoice)\r\n    if (this.currentUserType === 'accountant') {\r\n      invoice.accountant_lock = true;\r\n      invoice.account_manager_lock = false;\r\n    }\r\n    this.invoiceServices.addNewInvoice(invoice).subscribe(res => {\r\n      console.log(res)\r\n      // this.invoice = {\r\n      //   items: [],\r\n      //   name: \"\",\r\n      //   type_id: \"\",\r\n      //   data_from: \"\",\r\n      //   data_to: \"\",\r\n      //   price: \"\",\r\n      //   vat_percentage: 14,\r\n      //   company_name: \"\",\r\n      //   client_name: \"\",\r\n      //   client_phone: \"\",\r\n      //   po_number: \"\",\r\n      //   accountant_lock: \"\",\r\n      //   account_manager_lock: \"\"\r\n      // }\r\n      this.mess.showMessage(\"Success\", \"Add invoice Done\", \"success\");\r\n    }, error => {\r\n      console.log(error)\r\n    });\r\n  }\r\n\r\n  getTypes() {\r\n    this.typesServices.getAll().subscribe(data => {\r\n      this.types = data;\r\n    })\r\n  }\r\n\r\n  getItems() {\r\n    this.itemsServices.getAllItems().subscribe(data => {\r\n      this.items = data;\r\n    })\r\n  }\r\n\r\n  addNewItemToInvoice(itemID) {\r\n    let items = this.items;\r\n    for (let index = 0; index < items.length; index++) {\r\n      if (items[index].item_id == itemID) {\r\n        let item = items[index];\r\n        this.invoice.items.push({\r\n          item_id: item.item_id,\r\n          item_price: \"\",\r\n          item_quantity: \"\",\r\n          item_cost: \"\",\r\n          item_name: item.item_name,\r\n          item_description: item.item_description\r\n        });\r\n      }\r\n    }\r\n    this.itemId = \"\";\r\n  }\r\n\r\n  removeItemFromInvoice(item) {\r\n    let items = this.invoice.items;\r\n    for (let index = 0; index < items.length; index++) {\r\n      let oneitem = items[index];\r\n      if (oneitem.item_id === item.item_id) {\r\n        items.splice(index, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"col-xs-12\\\">\\r\\n  <div class=\\\"panel panel-primary\\\">\\r\\n    <div class=\\\"panel-heading\\\">All Users Types</div>\\r\\n    <div class=\\\"panel-body\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xs-12\\\">\\r\\n          <table class=\\\"table\\\">\\r\\n            <thead class=\\\"black white-text\\\">\\r\\n              <tr>\\r\\n                <th scope=\\\"col\\\">ID</th>\\r\\n                <th scope=\\\"col\\\">Type Name</th>\\r\\n                <th scope=\\\"col\\\">Actions</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let type of usersTypes; let index = index\\\">\\r\\n                <th scope=\\\"row\\\">{{index + 1}}</th>\\r\\n                <td>{{type.utype_name}}</td>\\r\\n                <td class=\\\"actions\\\">\\r\\n                  <a (click)=\\\"deleteUserType(type._id)\\\">\\r\\n                    <i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                  </a>\\r\\n                  <a routerLink=\\\"{{'/updateUserType/' + type._id}}\\\">\\r\\n                    <i class=\\\"fa fa-pencil-square\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                  </a>\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit, HostBinding } from '@angular/core';\r\nimport { MainServices } from '../../services/main.services';\r\nimport { Message } from 'primeng/components/common/api';\r\nimport { NotificationsServices } from './../../services/notifications.services';\r\n\r\n@Component({\r\n  selector: 'app-users-types',\r\n  templateUrl: './users-types.component.html',\r\n  styleUrls: ['./users-types.component.css']\r\n})\r\nexport class UsersTypesComponent implements OnInit {\r\n\r\n  usersTypes;\r\n  msgs: Message[] = [];\r\n\r\n  constructor(\r\n    private main: MainServices,\r\n    private mess: NotificationsServices\r\n  ) {\r\n    this.getAllUsersTypes()\r\n  }\r\n\r\n  getAllUsersTypes() {\r\n    this.main.getRequest('userstypes').subscribe(data => {\r\n      this.usersTypes = data;\r\n      console.log(this.usersTypes)\r\n    });\r\n  }\r\n\r\n  deleteUserType(id) {\r\n    this.main.DeleteRequest('userstypes/' + id).subscribe(res => {\r\n      this.getAllUsersTypes();\r\n      this.mess.showMessage(\"Success\", \"Delete type Done\", \"warn\");\r\n    })\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"col-xs-12\\\">\\n  <div class=\\\"panel panel-primary\\\">\\n    <div class=\\\"panel-heading\\\">All Users</div>\\n    <div class=\\\"panel-body\\\">\\n      <div class=\\\"row\\\">\\n\\n        <div class=\\\"col-xs-12\\\">\\n          <table class=\\\"table\\\">\\n            <thead class=\\\"black white-text\\\">\\n              <tr>\\n                <th scope=\\\"col\\\">ID</th>\\n                <th scope=\\\"col\\\">Name</th>\\n                <th scope=\\\"col\\\">User Name</th>\\n                <th scope=\\\"col\\\">Email</th>\\n                <th scope=\\\"col\\\">type</th>\\n                <th scope=\\\"col\\\">Actions</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let user of users; let index = index\\\">\\n                <!-- <th scope=\\\"row\\\">{{item.item_id}}</th> -->\\n                <th scope=\\\"row\\\">{{index + 1}}</th>\\n                <td>{{user.name}}</td>\\n                <td>{{user.user_name}}</td>\\n                <td>{{user.email}}</td>\\n                <td>{{user.utype_name}}</td>\\n                <td class=\\\"actions\\\">\\n                  <a (click)=\\\"deleteUser(user.user_id)\\\">\\n                    <i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i>\\n                  </a>\\n                  <a routerLink=\\\"{{'/updateUser/' + user.user_id}}\\\">\\n                    <i class=\\\"fa fa-pencil-square\\\" aria-hidden=\\\"true\\\"></i>\\n                  </a>\\n                </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n        </div>\\n\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, HostBinding } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { MainServices } from '../../services/main.services';\r\nimport { Message } from 'primeng/components/common/api';\r\nimport { NotificationsServices } from './../../services/notifications.services';\r\n\r\n@Component({\r\n  selector: 'app-users',\r\n  templateUrl: './users.component.html',\r\n  styleUrls: ['./users.component.css']\r\n})\r\nexport class UsersComponent implements OnInit {\r\n\r\n  users;\r\n  msgs: Message[] = [];\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private main: MainServices,\r\n    private mess: NotificationsServices\r\n  ) {\r\n\r\n    this.getAllUsers();\r\n\r\n  }\r\n\r\n  getAllUsers() {\r\n    this.main.getRequest('users').subscribe(data => {\r\n      this.users = data;\r\n      console.log(this.users)\r\n    });\r\n  }\r\n\r\n  deleteUser(id){\r\n    this.main.DeleteRequest('users/' + id).subscribe(res => {\r\n      console.log(res);\r\n      this.mess.showMessage(\"Success\", \"Delete user Done\", \"warn\");\r\n      this.getAllUsers();\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private router: Router,\n  ){}\n\n  canActivate(route:ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if (localStorage.getItem('currentUser')) {\n        return true;\n    }\n    // not logged in so redirect to login page with the return url\n    this.router.navigateByUrl('/login');\n    return false;\n  }\n\n}","import { MainServices } from './main.services';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class HomeServices {\r\n\r\n\r\n    constructor(\r\n        private main: MainServices\r\n    ) {\r\n\r\n    }\r\n\r\n    getNumberOfItems(){\r\n        return this.main.getRequest('items/count');\r\n    }\r\n\r\n    getNumberOfInvoices(){\r\n        return this.main.getRequest('invoices/count');\r\n    }\r\n\r\n}","import { MainServices } from './main.services';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class InvoicesServices {\r\n\r\n\r\n    constructor(\r\n        private main: MainServices\r\n    ) {\r\n\r\n    }\r\n\r\n    getInvoice(id){\r\n        return this.main.getRequest('invoices/' + id);\r\n    }\r\n\r\n    getAllInvoices() {\r\n        return this.main.getRequest('invoices');\r\n    }\r\n\r\n    addNewInvoice(invoice) {\r\n        return this.main.PostRequest('invoices', invoice);\r\n    }\r\n\r\n    editInvoice(id, invoice) {\r\n        return this.main.PutRequest('invoices/' + id, invoice);\r\n    }\r\n\r\n    deleteInvoice(id){\r\n        return this.main.DeleteRequest('invoices/' + id);\r\n    }\r\n\r\n}","import { MainServices } from './main.services';\r\nimport { Items } from './../interfaces/items';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ItemsServices {\r\n  \r\n    items: Items;\r\n\r\n  constructor(\r\n      private http: HttpClient,\r\n      private main: MainServices\r\n  ){\r\n\r\n  }\r\n\r\n  getAllItems(){\r\n    return this.main.getRequest('items');\r\n  }\r\n\r\n}","import { MainServices } from './main.services';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ItemsTypesServices {\r\n\r\n    constructor(\r\n        private main: MainServices\r\n    ) {\r\n\r\n    }\r\n\r\n    getAll() {\r\n        return this.main.getRequest('prodtypes');\r\n    }\r\n\r\n    deleteType(id){\r\n        return this.main.DeleteRequest('prodtypes/' + id);\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { throwError } from 'rxjs';\r\nimport { NotificationsServices } from './notifications.services';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class MainServices {\r\n\r\n    // url = \"http://localhost:3000/\";\r\n    url = \"https://testfordeg.herokuapp.com/\"; // production\r\n    currentUser;\r\n\r\n    headers;\r\n    constructor(\r\n        private http: HttpClient,\r\n        private router: Router,\r\n        private mess: NotificationsServices\r\n    ) {\r\n\r\n        this.getToken();\r\n    }\r\n\r\n    ifTokenExpired(err){\r\n        // console.log(err);\r\n        if(typeof err === \"string\"){\r\n            if(err.includes(\"invalid\") || err.includes(\"denied\") || err.includes(\"Unauthorized\")){\r\n                localStorage.removeItem(\"currentUser\");\r\n                this.router.navigateByUrl('/login');\r\n            }\r\n        }else {\r\n            console.log(err.text);\r\n            this.mess.showMessage(\"Main Services\", err.text, \"error\");\r\n        }\r\n    }\r\n\r\n    getToken() {\r\n        if (JSON.parse(localStorage.getItem(\"currentUser\"))) {\r\n            this.currentUser = localStorage.getItem(\"currentUser\");\r\n            this.setHeaders(this.currentUser);\r\n        } else {\r\n            this.router.navigateByUrl('/login');\r\n        }\r\n    }\r\n\r\n    setHeaders(user) {\r\n        let token = JSON.parse(user).token;\r\n        // console.log(token);\r\n        this.headers = new HttpHeaders()\r\n            .set(\"auth-token\", token)\r\n            .set(\"Content-Type\", \"application/json\");\r\n    }\r\n\r\n    getRequest(route) {\r\n        let newRoute = this.url + route;\r\n        return this.http.get(newRoute, { headers: this.headers })\r\n            .pipe(catchError((error, caught) => {\r\n                // console.log(\"error\", error);\r\n                this.ifTokenExpired(error.error);\r\n                return throwError(error);\r\n            })) as any;\r\n    }\r\n\r\n    PostRequest(route, body) {\r\n        let newRoute = this.url + route;\r\n        return this.http.post(newRoute, body, { headers: this.headers })\r\n        .pipe(catchError((error, caught) => {\r\n            // console.log(\"error\", error);\r\n            this.ifTokenExpired(error.error);\r\n            return throwError(error);\r\n        })) as any;\r\n    }\r\n\r\n    PutRequest(route, body) {\r\n        let newRoute = this.url + route;\r\n        return this.http.put(newRoute, body, { headers: this.headers })\r\n        .pipe(catchError((error, caught) => {\r\n            // console.log(\"error\", error);\r\n            this.ifTokenExpired(error.error);\r\n            return throwError(error);\r\n        })) as any;\r\n    }\r\n\r\n    DeleteRequest(route) {\r\n        let newRoute = this.url + route;\r\n        return this.http.delete(newRoute, { headers: this.headers })\r\n        .pipe(catchError((error, caught) => {\r\n            // console.log(\"error\", error);\r\n            this.ifTokenExpired(error.error);\r\n            return throwError(error);\r\n        })) as any;\r\n    }\r\n\r\n    handleError() {\r\n\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { MessageService } from 'primeng/components/common/messageservice';\r\n\r\n@Injectable()\r\nexport class NotificationsServices {\r\n\r\n    constructor(private messageService: MessageService) { }\r\n\r\n    // success - info - warn - error - \r\n\r\n    showMessage(mess, desc, severity) {\r\n        this.messageService.add({ severity: severity, summary: mess, detail: desc });\r\n    }\r\n\r\n    clearMessages() {\r\n        this.messageService.clear();\r\n    }\r\n\r\n}","import { MainServices } from './main.services';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class PermissionsServices {\r\n\r\n    currentUserType: string;\r\n    currentUserName: string;\r\n\r\n    constructor(\r\n        private main: MainServices\r\n    ) {\r\n        this.getCurrentUserType()\r\n    }\r\n\r\n    getCurrentUserType() {\r\n        if (localStorage.getItem(\"currentUser\")) {\r\n            this.currentUserType = JSON.parse(localStorage.getItem(\"currentUser\")).utype_name.toLowerCase();\r\n            return this.currentUserType;\r\n        }\r\n    }\r\n\r\n    getCurrentUserName(){\r\n        if (localStorage.getItem(\"currentUser\")) {\r\n            this.currentUserName = JSON.parse(localStorage.getItem(\"currentUser\")).name;\r\n            return this.currentUserName;\r\n        }\r\n    }\r\n\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}